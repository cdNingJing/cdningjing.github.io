const data = [
  {
    "title": "前言",
    "id": "data1",
    "value": [
      "随着互联网的普及和智能设备的普及化，少儿编程教育已成为当前热门的教育领域之一。",
      "未来几年，人工智能、物联网和大数据等技术的发展将进一步推动社会的发展。",
      "",
      "本教程旨在为5-16岁的少儿提供有趣、互动和实践的编程教育课程。",
      "我们的理念是以孩子为中心，注重培养创造力、合作精神和解决问题的能力，以满足未来社会对科技创新人才的需求。"
    ],
    "highlight": ["互联网", "智能设备", "少儿编程教育", "人工智能", "物联网", "大数据", "互动和实践", "创造力", "合作精神", "解决问题", "科技创新"]
  },
  {
    "title": "学习阶段",
    "id": "data2",
    "value": [
      "启蒙阶段：这一阶段主要是为了激发孩子对编程的兴趣和好奇心。适合4-6岁的孩子，主要通过游戏化的方式，让孩子在玩耍中学习编程的基本概念，如循环、条件判断等。例如 Scratch 是一款非常适合这个阶段孩子的编程工具。",
      "优点：易于上手，趣味性强，能够激发孩子的学习兴趣。",
      "缺点：知识体系不完整，只能学习到编程的基础知识，不能深入学习编程语言。",
      "",
      "初级阶段：这一阶段主要是学习基础的编程语法和逻辑思维。适合7-12岁的孩子，可以通过一些在线课程或者编程书籍进行学习。例如 Python 是一门非常适合这个阶段孩子的编程语言。",
      "优点：知识体系完整，能够学习到编程的基本原理和方法。",
      "缺点：学习难度较大，需要一定的逻辑思维能力。",
      "",
      "中级阶段：这一阶段主要是通过实践项目来提高孩子的编程能力。适合10岁以上的孩子，可以通过参加一些编程比赛或者做一些小项目来进行学习。例如 Java、C++ 等编程语言都可以用来做实践项目。",
      "优点：能够提高孩子的实践能力和解决问题的能力。",
      "缺点：需要一定的时间和精力投入。",
      "",
      "高级阶段：这一阶段主要是通过深入学习和研究来提高孩子的编程能力。适合12岁以上的孩子，可以通过阅读一些高级的编程书籍或者参与一些开源项目来学习。例如 Linux 内核代码就是一种非常复杂的开源项目。",
      "优点：能够提高孩子的深度思考能力和创新能力。",
      "缺点：需要一定的计算机科学基础和英语水平。"
    ],
    "highlight": ["启蒙阶段：", "初级阶段：", "中级阶段：", "高级阶段："]
  },
  {
    "title": "个人经历",
    "id": "data3",
    "value": [
      "我的个人经历始于2016年，当时我踏入了充满挑战与机遇的互联网行业。",
      "在这个瞬息万变的环境中，我接触到了物联网这个新兴领域，它为我提供了无尽的创新空间和可能性。",
      "2019年，我进一步挑战自我，开始负责后台数据管理页面。这个项目让我深入理解了数据管理的重要性，并磨练了我处理复杂问题的能力。",
      "",
      "时间推进到2020年，我所在的公司开始涉足人工智能领域。这是一个全新的挑战, 同时也进一步开阔了眼界。",
      "老板说: 如果你有幸成为那第一批看到日出的人，你可以尝试快速下楼，去告诉地面上的人太阳长什么样子。虽然他们还没有看到，但你给他们证明的最好方式，就是再等两分钟。",
      "",
      "如今，我们可以看到各种各样的人工智能技术正在不断发展和进步。这些技术的广泛应用已经深刻地改变了我们的生活和工作方式。",
      "因此，我更加愿意分享我们所见的。也许你可以等两分钟就能看到太阳。",
      "但是，为什么你不敢爬上楼去自己看一看。"
    ],
    "highlight": ["互联网", "人工智能", "物联网"]
  }
]